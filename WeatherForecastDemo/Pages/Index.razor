@page "/"
@using WeatherForecastDemo.Models
@using WeatherForecastDemo.Services
@inject WeatherDataService WeatherDataService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<select @onchange="OnStateChanged">
    <option value="">Please select a State</option>
    @foreach (var state in Enum.GetValues<State>())
    {
        <option value="@state">@Enum.GetName(state)</option>
    }
</select>

@if (_state != null && _zones.ContainsKey(_state.Value))
{
    <select @onchange="OnZoneChanged">
        <option value="">Please select a Zone</option>
        @foreach (var zone in _zones[_state.Value])
        {
            <option value="@zone.Id">@zone.Name</option>
        }
    </select>
}

@if (_zone != null)
{
    <WeatherForecastTable Zone="@_zone"/>
}

@code {
    private Dictionary<State, List<Zone>> _zones = new();
    private State? _state;
    private string _zone;

    protected override void OnInitialized()
    {
        WeatherDataService.Zones.Subscribe(zones =>
        {
            _zones = zones;
            StateHasChanged();
        });
    }

    private void OnStateChanged(ChangeEventArgs e)
    {
        var val = e.Value as string;
        if (string.IsNullOrEmpty(val))
        {
            _state = null;
            return;
        }
        _state = Enum.Parse<State>(val);
        WeatherDataService.GetZones(_state.Value);
    }

    private void OnZoneChanged(ChangeEventArgs e)
    {
        var val = e.Value as string;
        if (string.IsNullOrEmpty(val))
        {
            _zone = null;
            return;
        }
        _zone = val;
    }

}